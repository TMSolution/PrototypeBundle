<?php 
/**
 * Copyright (c) 2015, TMSolution
 * All rights reserved.
 *
 * For the full copyright and license information, please view
 * the file LICENSE.md that was distributed with this source code.
 */
namespace  {{formTypeNamespace}};

use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
use Symfony\Component\Form\AbstractType;

/**
 * FormType  for '{{entityName}}'.
 *
 * Generated with {@see TMSolution\PrototypeBundle\Command\GenerateFormTypeCommand}.
 */
class FormType extends AbstractType
{

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        
        $builder
        {% for field, fieldParam in fieldsInfo %}{% if field !='id' %}{% if fieldParam.formType=='text' %}->add('{{field}}', '{{fieldParam.formType}}', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}',
                //'widget' => 'widget name',
                //'required' => true,
                //'attr' => [
                //    'placeholder' => 'placeholder text',
                //    'class' => 'css class name',
                //]
             ])
            {% elseif fieldParam.formType=='number' %}->add('{{field}}', '{{fieldParam.formType}}', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}',
                //'widget' => 'widget name',
                //'required' => true,
                //'attr' => [
                //    'placeholder' => 'placeholder text',
                //    'class' => 'css class name',
                //]   
             ])
            {% elseif fieldParam.formType=='datetime' %}->add('{{field}}', '{{fieldParam.formType}}', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}',
                'widget' => 'single_text',
                //'required' => true,
                'format' => 'dd.MM.yyyy',
                'attr' => [
                    'placeholder' => '',
                    'class' => 'datepicker',
                    'data-provide' => 'datepicker'
                ]   
             ]) 
            {% elseif fieldParam.formType=='date' %}->add('{{field}}', '{{fieldParam.formType}}', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}',
                'widget' => 'single_text',
                //'required' => true,
                'format' => 'dd.MM.yyyy',
                'attr' => [
                    'placeholder' => '',
                    'class' => 'datepicker',
                    'data-provide' => 'datepicker'
                ]   
             ])  
            {% elseif fieldParam.formType=='array' %}->add('{{field}}', 'choice', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}'
                //'widget' => 'widget name',
                //'required' => true,
                //'choices' => array(
                //    'param1' => 'value1',
                //    'param2' => 'value2',
                //    'param3' => 'value3'
                //),
                //'attr' => [
                //    'placeholder' => 'placeholder text',
                //    'class' => 'css class name',
                //]   
             ])
            {% elseif fieldParam.formType=='entity' %}{% if fieldParam.association=='ManyToMany' or fieldParam.association=='OneToMany' %}->add('{{field}}', 'entity', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}',
                'class' => '{{fieldParam.object_name}}',
                'expanded' =>false,
                'multiple'=>true,
                //'label' => 'Label name',
                //'widget' => 'widget name',
                //'required' => true,
                //'choices' => array(
                //    'param1' => 'value1',
                //    'param2' => 'value2',
                //    'param3' => 'value3'
                //),
                //'attr' => [
                //    'placeholder' => 'placeholder text',
                //    'class' => 'css class name',
                //]   
             ])
            {% else %}->add('{{field}}', 'entity', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}',
                'class' => '{{fieldParam.object_name}}',
                //'label' => 'Label name',
                //'widget' => 'widget name',
                //'required' => true,
                //'choices' => array(
                //    'param1' => 'value1',
                //    'param2' => 'value2',
                //    'param3' => 'value3'
                //),
                //'attr' => [
                //    'placeholder' => 'placeholder text',
                //    'class' => 'css class name',
                //]   
             ])
            {% endif %} 
            {% elseif fieldParam.formType=='boolean' %}->add('{{field}}', 'checkbox', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}'
                //'widget' => 'widget name',
                //'required' => true,
                //'attr' => [
                //    'class' => 'css class name',
                //]   
             ]) 
            {% else %}->add('{{field}}', '{{fieldParam.formType}}', [
                'label' => '{{lowerNameSpaceForTranslate}}.{{objectName}}.{{field}}'
                //'widget' => 'widget name',
                //'required' => true,
                //'attr' => [
                //    'placeholder' => 'placeholder text',
                //    'class' => 'css class name',
                //]   
             ])
        {% endif %}{% if loop.last %};{% endif %}{% endif %}{% endfor %}
        
    }


    /**
     * @param OptionsResolverInterface $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            "data_class" => "{{entityName}}",
            'csrf_protection' => false,
        ));
    }

    /**
     * @return string
     */
    public function getName()
    {
        return '{{formTypeName}}';
    }

}




